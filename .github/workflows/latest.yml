# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ latest ]
  pull_request:
    branches: [ latest ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "Unit testing:"

      # Runs a set of commands using the runners shell
      - name: Install monorepo and give it a spin
        run: |
          set -euo pipefail    
          APPNAME="prisma_day_2021_latest"
          POSTGRES_PASSWORD="changeme"
          KEYSTONE_PGPASSWORD="changeme2"
          KEYSTONE_DATABASE=$APPNAME
          KEYSTONE_USERNAME="keystone_db_user"
          KEYSTONE_NEXTJS_BUILD_API_KEY="keystone_change_me2_make_a_non_postgres_user2"

          DATABASE_URL="postgres://$KEYSTONE_USERNAME:$POSTGRES_PASSWORD@localhost/$KEYSTONE_DATABASE"

          echo "ubuntu dependent CI:"
          sudo apt-get update
          sudo apt install curl postgresql  git
 
          sudo service postgresql start
          
          echo $(netstat -an | grep postgresql)
          echo $(ps -ax | grep postgresql)

          cd ~
          curl -sL https://deb.nodesource.com/setup_14.x -o setup_14.sh
          chmod +x ./setup_14.sh
          sudo ./setup_14.sh     
          sudo apt install nodejs      
          cd $GITHUB_WORKSPACE
          
          export PGPASSWORD=admin 
          
          sudo psql -X -h localhost -U postgres -t -c "create user user_name with encrypted password '$KEYSTONE_PGPASSWORD';"
          sudo psql -X -h localhost -U postgres -t -c "CREATE DATABASE $KEYSTONE_DATABASE;"
          sudo psql -X -h localhost -U postgres -t -c "grant all privileges on database $KEYSTONE_DATABASE to $KEYSTONE_USERNAME;"
          sudo psql -X -h localhost -U postgres -t -c "ALTER USER postgres PASSWORD '$POSTGRES_PASSWORD';"

          yarn        
          yarn dev &         
          sleep 5   
          echo "Building unseeded production server: $APPNAME"       
          yarn site:build          
          echo "Build unseeded $appname:latest production succeded" 

      # Deploy:
