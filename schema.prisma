// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider   = "prisma-client-js"
  output     = "node_modules/.prisma/client"
  engineType = "binary"
}

model Post {
  id            String    @id @default(cuid())
  title         String    @default("")
  slug          String    @unique @default("")
  status        String?   @default("draft")
  publishedDate DateTime?
  author        User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId      String?   @map("author")
  labels        Label[]   @relation("Label_posts_Post_labels")
  intro         Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  content       Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")

  @@index([authorId])
}

model Label {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Label_posts_Post_labels")
}

model Poll {
  id      String       @id @default(cuid())
  label   String       @default("")
  answers PollAnswer[] @relation("PollAnswer_poll")
}

model PollAnswer {
  id              String  @id @default(cuid())
  label           String  @default("")
  poll            Poll?   @relation("PollAnswer_poll", fields: [pollId], references: [id])
  pollId          String? @map("poll")
  answeredByUsers User[]  @relation("PollAnswer_answeredByUsers_User_pollAnswers")

  @@index([pollId])
}

model User {
  id             String       @id @default(cuid())
  name           String       @default("")
  email          String       @unique @default("")
  password       String
  role           Role?        @relation("User_role", fields: [roleId], references: [id])
  roleId         String?      @map("role")
  githubUsername String       @default("")
  authoredPosts  Post[]       @relation("Post_author")
  pollAnswers    PollAnswer[] @relation("PollAnswer_answeredByUsers_User_pollAnswers")

  @@index([roleId])
}

model Role {
  id               String  @id @default(cuid())
  name             String  @default("")
  canManageContent Boolean @default(false)
  canManageUsers   Boolean @default(false)
  users            User[]  @relation("User_role")
}